version: '2'
services:
  nginx:
    container_name: nginx
    build: ./nginx
#    image: nginx:1.19.1
    networks:
      - color-nw
    depends_on:
      - react-frontend
      - play-backend
    ports:
      - 80:80
      - 443:443
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/default.conf:/etc/nginx/conf.d/www.wip.colorcontroversy.com.conf
#      - ./nginx/letsencrypt-nginx.sh:letsencrypt-nginx.sh
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

  postgres:
    container_name: postgres
    image: postgres:12.4
    networks:
      - color-nw
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  play-backend:
    container_name: play-backend
    build: ./play-backend
    networks:
      - color-nw
    depends_on:
      - postgres
    volumes:
      - ./play-backend:/root/app
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  react-frontend:
    container_name: react-frontend
    build:
      context: ./react-frontend
      dockerfile: Dockerfile.dev
    networks:
      - color-nw
    depends_on:
      - play-backend
      - postgres
    stdin_open: true
    tty: true
    volumes:
      - ./react-frontend/tsconfig.json:/app/tsconfig.json
      - ./react-frontend/src:/app/src
      - ./react-frontend/public:/app/public

volumes:
  postgres-data:

networks:
  color-nw:
