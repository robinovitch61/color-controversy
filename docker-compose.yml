version: "2"
services:

  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:1.19.1
    networks:
      - color-nw
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/certs

  nginx-proxy-gen:
    container_name: nginx-proxy-gen
    image: jwilder/docker-gen:0.7.0
    networks:
      - color-nw
    volumes_from:
      - nginx-proxy
    volumes:
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - nginx-proxy
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  nginx-letsencrypt:
    container_name: nginx-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.13
    networks:
      - color-nw
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
      - nginx-proxy-gen
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-proxy-gen
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
      - ACME_CA_URI=${ACME_CA_URI}

  postgres:
    container_name: postgres
    image: postgres:12.3
    networks:
      - color-nw
    depends_on:
      - nginx-proxy
      - nginx-proxy-gen
      - nginx-letsencrypt
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  play-backend:
    container_name: play-backend
    build: ./play-backend
    networks:
      - color-nw
    depends_on:
      - nginx-proxy
      - nginx-proxy-gen
      - nginx-letsencrypt
      - postgres
    volumes:
      - ./play-backend:/root/app

  react-frontend:
    container_name: react-frontend
    build:
      context: ./react-frontend
      dockerfile: Dockerfile.dev
    networks:
      - color-nw
    stdin_open: true
    tty: true
    depends_on:
      - nginx-proxy
      - nginx-proxy-gen
      - nginx-letsencrypt
      - postgres
      - play-backend
    volumes:
      - ./react-frontend/tsconfig.json:/app/tsconfig.json
      - ./react-frontend/src:/app/src
      - ./react-frontend/public:/app/public
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VIRTUAL_PORT=3000
      - VIRTUAL_HOST=${HOSTNAME}
      - LETSENCRYPT_HOST=${HOSTNAME}

    

volumes:
  postgres-data:

networks:
  color-nw:

